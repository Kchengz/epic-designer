import{d as m,e as d,g as u,b as a,l as b,o as P}from"./getTag.DtjCqBUh.js";import{e as O,M as y}from"./getAllKeys.BwAxqbuf.js";var I="[object Symbol]";function s(r){return typeof r=="symbol"||m(r)&&d(r)==I}function T(r,t){for(var e=-1,n=r==null?0:r.length,i=Array(n);++e<n;)i[e]=t(r[e],e,r);return i}var w=1/0,p=u?u.prototype:void 0,g=p?p.toString:void 0;function l(r){if(typeof r=="string")return r;if(a(r))return T(r,l)+"";if(s(r))return g?g.call(r):"";var t=r+"";return t=="0"&&1/r==-w?"-0":t}var h=function(){try{var r=b(Object,"defineProperty");return r({},"",{}),r}catch{}}();function E(r,t,e){t=="__proto__"&&h?h(r,t,{configurable:!0,enumerable:!0,value:e,writable:!0}):r[t]=e}var S=Object.prototype,_=S.hasOwnProperty;function q(r,t,e){var n=r[t];(!(_.call(r,t)&&O(n,e))||e===void 0&&!(t in r))&&E(r,t,e)}var C=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,N=/^\w*$/;function A(r,t){if(a(r))return!1;var e=typeof r;return e=="number"||e=="symbol"||e=="boolean"||r==null||s(r)?!0:N.test(r)||!C.test(r)||t!=null&&r in Object(t)}var M="Expected a function";function f(r,t){if(typeof r!="function"||t!=null&&typeof t!="function")throw new TypeError(M);var e=function(){var n=arguments,i=t?t.apply(this,n):n[0],o=e.cache;if(o.has(i))return o.get(i);var c=r.apply(this,n);return e.cache=o.set(i,c)||o,c};return e.cache=new(f.Cache||y),e}f.Cache=y;var $=500;function x(r){var t=f(r,function(n){return e.size===$&&e.clear(),n}),e=t.cache;return t}var z=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,F=/\\(\\)?/g,R=x(function(r){var t=[];return r.charCodeAt(0)===46&&t.push(""),r.replace(z,function(e,n,i,o){t.push(i?o.replace(F,"$1"):n||e)}),t});function V(r){return r==null?"":l(r)}function G(r,t){return a(r)?r:A(r,t)?[r]:R(V(r))}var K=1/0;function X(r){if(typeof r=="string"||s(r))return r;var t=r+"";return t=="0"&&1/r==-K?"-0":t}function D(r,t){t=G(t,r);for(var e=0,n=t.length;r!=null&&e<n;)r=r[X(t[e++])];return e&&e==n?r:void 0}var L=P(Object.getPrototypeOf,Object);export{q as a,D as b,G as c,T as d,h as e,A as f,L as g,E as h,s as i,f as m,X as t};
