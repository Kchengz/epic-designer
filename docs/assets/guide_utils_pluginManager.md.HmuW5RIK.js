import{_ as a,c as i,o as s,a3 as e}from"./chunks/framework.Bj7ZzXMq.js";const E=JSON.parse('{"title":"pluginManager 插件管理器","description":"","frontmatter":{},"headers":[],"relativePath":"guide/utils/pluginManager.md","filePath":"guide/utils/pluginManager.md"}'),t={name:"guide/utils/pluginManager.md"},n=e(`<h1 id="pluginmanager-插件管理器" tabindex="-1">pluginManager 插件管理器 <a class="header-anchor" href="#pluginmanager-插件管理器" aria-label="Permalink to &quot;pluginManager 插件管理器&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">插件管理器</p><p><code>pluginManager</code> 是用于管理扩展组件，模块功能的管理器对象</p></div><h2 id="注册组件" tabindex="-1">注册组件 <a class="header-anchor" href="#注册组件" aria-label="Permalink to &quot;注册组件&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { pluginManager,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ComponentConfigModel } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;epic-designer&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./cmp.vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  groupName:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;自定义组件&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  icon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;epic-icon-write&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  defaultSchema: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;测试扩展组件&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    componentProps: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  config: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    attribute: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;属性1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        field: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pluginManager.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Test);</span></span></code></pre></div><p>在同级目录下创建cmp.vue</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  	我是扩展的组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h4 id="registercomponent" tabindex="-1">registerComponent <a class="header-anchor" href="#registercomponent" aria-label="Permalink to &quot;registerComponent&quot;">​</a></h4><p>类型：<code>(componentConfig: ComponentConfigModel) =&gt; void</code></p><p>说明：注册组件到插件管理器中</p><h4 id="getcomponentconfings" tabindex="-1">getComponentConfings <a class="header-anchor" href="#getcomponentconfings" aria-label="Permalink to &quot;getComponentConfings&quot;">​</a></h4><p>类型：<code>() =&gt; ComponentConfigModelRecords</code></p><p>说明：获取所有插件管理中的所有组件配置</p><h4 id="getcomponentconfingbytype" tabindex="-1">getComponentConfingByType <a class="header-anchor" href="#getcomponentconfingbytype" aria-label="Permalink to &quot;getComponentConfingByType&quot;">​</a></h4><p>类型：<code>(type: string) =&gt; ComponentConfigModel</code></p><p>说明：通过type获取组件配置</p><h4 id="getcomponents" tabindex="-1">getComponents <a class="header-anchor" href="#getcomponents" aria-label="Permalink to &quot;getComponents&quot;">​</a></h4><p>类型：<code>() =&gt; Components</code></p><p>说明：获取已注册的组件</p><h4 id="getcomponent" tabindex="-1">getComponent <a class="header-anchor" href="#getcomponent" aria-label="Permalink to &quot;getComponent&quot;">​</a></h4><p>类型：<code>(type: string) =&gt; any</code></p><p>说明：通过类型获取的组件</p><h4 id="registeractivitybar" tabindex="-1">registerActivitybar <a class="header-anchor" href="#registeractivitybar" aria-label="Permalink to &quot;registerActivitybar&quot;">​</a></h4><p>类型：<code>(activitybar: ActivitybarModel) =&gt; void</code></p><p>说明：注册活动栏</p><h4 id="getactivitybars" tabindex="-1">getActivitybars <a class="header-anchor" href="#getactivitybars" aria-label="Permalink to &quot;getActivitybars&quot;">​</a></h4><p>类型：<code>() =&gt; ActivitybarModel[]</code></p><p>说明：获取所有已注册活动栏配置</p><h4 id="hideactivitybar" tabindex="-1">hideActivitybar <a class="header-anchor" href="#hideactivitybar" aria-label="Permalink to &quot;hideActivitybar&quot;">​</a></h4><p>类型：<code>(value: string, attr?: string)=&gt; void</code></p><p>说明：隐藏活动栏</p><h4 id="showactivitybar" tabindex="-1">showActivitybar <a class="header-anchor" href="#showactivitybar" aria-label="Permalink to &quot;showActivitybar&quot;">​</a></h4><p>类型：<code>(value: string, attr?: string)=&gt; void</code></p><p>说明：显示活动栏</p><h4 id="registerrightsidebar" tabindex="-1">registerRightSidebar <a class="header-anchor" href="#registerrightsidebar" aria-label="Permalink to &quot;registerRightSidebar&quot;">​</a></h4><p>类型：<code>(rightSidebar: RightSidebarModel) =&gt; void</code></p><p>说明：注册右侧栏</p><h4 id="getrightsidebars" tabindex="-1">getRightSidebars <a class="header-anchor" href="#getrightsidebars" aria-label="Permalink to &quot;getRightSidebars&quot;">​</a></h4><p>类型：<code>() =&gt; RightSidebarModel[]</code></p><p>说明：获取所有已注册右侧栏配置</p><h4 id="hiderightsidebar" tabindex="-1">hideRightSidebar <a class="header-anchor" href="#hiderightsidebar" aria-label="Permalink to &quot;hideRightSidebar&quot;">​</a></h4><p>类型：<code>(value: string, attr?: string)=&gt; void</code></p><p>说明：隐藏右侧栏</p><h4 id="showrightsidebar" tabindex="-1">showRightSidebar <a class="header-anchor" href="#showrightsidebar" aria-label="Permalink to &quot;showRightSidebar&quot;">​</a></h4><p>类型：<code>(value: string, attr?: string)=&gt; void</code></p><p>说明：显示右侧栏</p><h4 id="setcomponentgroup-v0-9-1已删除" tabindex="-1"><s>setComponentGroup</s>(v0.9.1已删除) <a class="header-anchor" href="#setcomponentgroup-v0-9-1已删除" aria-label="Permalink to &quot;~~setComponentGroup~~(v0.9.1已删除)&quot;">​</a></h4><p>类型：<code>(componentGroup: ComponentGroupItem[]) =&gt; void</code></p><p>说明：设置分组,这个操作将会覆盖原来的数据</p><h4 id="addcomponentgroup-v0-9-1已删除" tabindex="-1"><s>addComponentGroup</s>(v0.9.1已删除) <a class="header-anchor" href="#addcomponentgroup-v0-9-1已删除" aria-label="Permalink to &quot;~~addComponentGroup~~(v0.9.1已删除)&quot;">​</a></h4><p>类型：<code>(componentGroupItem: ComponentGroupItem) =&gt; void</code></p><p>说明：添加分组</p><h4 id="setcomponentgroupnamemap" tabindex="-1">setComponentGroupNameMap <a class="header-anchor" href="#setcomponentgroupnamemap" aria-label="Permalink to &quot;setComponentGroupNameMap&quot;">​</a></h4><p>类型：<code>(groupName: string, mapName: string) =&gt; void</code></p><p>说明：设置组件分组名称到映射名称的关系</p><h4 id="clearcomponentgroupnamemap" tabindex="-1">clearComponentGroupNameMap <a class="header-anchor" href="#clearcomponentgroupnamemap" aria-label="Permalink to &quot;clearComponentGroupNameMap&quot;">​</a></h4><p>类型：<code>() =&gt; void</code></p><p>说明：清空组件分组名称到映射名称的关系</p><h4 id="setsortedgroups" tabindex="-1">setSortedGroups <a class="header-anchor" href="#setsortedgroups" aria-label="Permalink to &quot;setSortedGroups&quot;">​</a></h4><p>类型：<code>(sortedGroups: string[]) =&gt; void</code></p><p>说明：设置组件分组的排序</p><h4 id="clearsortedgroups" tabindex="-1">clearSortedGroups <a class="header-anchor" href="#clearsortedgroups" aria-label="Permalink to &quot;clearSortedGroups&quot;">​</a></h4><p>类型：<code>() =&gt; void</code></p><p>说明：清空组件分组的排序</p><h4 id="hidecomponent" tabindex="-1">hideComponent <a class="header-anchor" href="#hidecomponent" aria-label="Permalink to &quot;hideComponent&quot;">​</a></h4><p>类型：<code>(type: string) =&gt; void</code></p><p>说明：添加需要隐藏的组件类型</p><h4 id="showcomponent" tabindex="-1">showComponent <a class="header-anchor" href="#showcomponent" aria-label="Permalink to &quot;showComponent&quot;">​</a></h4><p>类型：<code>(type: string) =&gt; void</code></p><p>说明：移除需要隐藏的组件类型</p><h4 id="sethidecomponents" tabindex="-1">setHideComponents <a class="header-anchor" href="#sethidecomponents" aria-label="Permalink to &quot;setHideComponents&quot;">​</a></h4><p>类型：<code>(types: string[]) =&gt; void</code></p><p>说明：设置需要隐藏的组件类型数组</p><h4 id="addpublicmethod" tabindex="-1">addPublicMethod <a class="header-anchor" href="#addpublicmethod" aria-label="Permalink to &quot;addPublicMethod&quot;">​</a></h4><p>类型：<code>(method: MethodModel) =&gt; void</code></p><p>说明：添加公共方法</p><h4 id="removepublicmethod" tabindex="-1">removePublicMethod <a class="header-anchor" href="#removepublicmethod" aria-label="Permalink to &quot;removePublicMethod&quot;">​</a></h4><p>类型：<code>(methodName: string) =&gt; void</code></p><p>说明：移除公共方法</p>`,79),p=[n];function o(h,r,l,d,c,g){return s(),i("div",null,p)}const m=a(t,[["render",o]]);export{E as __pageData,m as default};
